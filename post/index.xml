<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://example.com/post/</link>
      <atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 19 May 2022 17:50:46 +0300</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://example.com/post/</link>
    </image>
    
    <item>
      <title>Создание презентаций.</title>
      <link>https://example.com/post/post6/</link>
      <pubDate>Thu, 19 May 2022 17:50:46 +0300</pubDate>
      <guid>https://example.com/post/post6/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Общая информация&lt;/strong&gt;
Хорошая презентация помогает понять спикера, а плохая лишь нагоняет скуку. Вы знаете это, если защищали диплом в вузе или слушали выступление коллег на совещании. К сожалению, плохих презентаций больше.&lt;/p&gt;
&lt;p&gt;Отличить хорошую презентацию очень просто: она помогает удержать внимание слушателей. В плохой презентации все в кучу: глаза разбегаются по ярким слайдам, мозг пытается обработать текст, а в это время спикер что-то бормочет о своем.&lt;/p&gt;
&lt;p&gt;Чтобы сделать хорошую презентацию, не нужно уметь рисовать, владеть фотошопом и тратить часы на сборку слайдов. Хорошая презентация — это внятное изложение и хорошая подача прежде всего. Это одинаково работает в публичных выступлениях и презентациях на сайтах.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Сформулируйте тему&lt;/strong&gt;
Трудно слушать собеседника, который перескакивает с одного на другое, поэтому у презентации должна быть только одна тема. Иначе получится долгий рассказ ни о чем. Тема должна быть достаточно узкой, чтобы в конце предложить решение проблемы. Сужайте тему до тех пор, пока презентацию нельзя будет изложить в десяти коротких пунктах.&lt;/p&gt;
&lt;p&gt;Определить хорошую тему легко — она сама подсказывает структуру выступления.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Определите цель&lt;/strong&gt;
Хорошая презентация меняет сложившуюся картину мира. Например, люди начинают бережнее относиться к окружающей среде или бегут за новым смартфоном. Цель не обязательно должна быть амбициозной, главное — конкретной.&lt;/p&gt;
&lt;p&gt;Хорошая цель презентации начинается с вопроса: что я хочу изменить в поведении слушателей.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Продумайте сценарий&lt;/strong&gt;
Цель презентации — это то, что вы хотите изменить в голове слушателя, а сценарий — это то, как вы к придете к этим изменениям.&lt;/p&gt;
&lt;p&gt;Представьте, что вы сочиняете историю. Слушателя надо заинтриговать, придумать интересного героя, провести его через трудности к успешному финалу. Это и есть базовая структура любого текста и презентации. На такой структуре держатся сказки, сценарии фильмов и реклама продуктов.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Покажите примеры&lt;/strong&gt;
Меньше теории — больше жизни. Показывайте, как работает ваш продукт и как им пользуются люди. Посмотрите, как это делают на Кикстартере.&lt;/p&gt;
&lt;p&gt;Реальные истории людей, скриншоты программ и живые фотографии продукта смотрятся убедительнее, чем сухой текст и фотографии с фотостоков.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Чередуйте слайды&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Презентация — как текст. Если текст состоит из предложений одинаковой длины и одного вида, читать будет скучно. Нет ритма. Поэтому чередуйте текстовые слайды и слайды с изображениями, добавляйте графики. Иногда можно и пошутить.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Скажите, что делать дальше&lt;/strong&gt;
Плохое выступление заканчивается так: «Это все, теперь вопросы». Так вы оставляете слушателя наедине с его мыслями.&lt;/p&gt;
&lt;p&gt;Хорошая презентация дает четкую инструкцию, что делать дальше. Это не обязательно призыв к действию. В конце можно еще раз пройтись по выводам, подчеркнуть основной тезис или сказать, где взять дополнительную информацию.&lt;/p&gt;
&lt;p&gt;Заканчивайте инструкцией или выводом.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Меньше цветов&lt;/strong&gt;
В презентации должно быть 1−2 основных цвета. Например, для фона, текста и иконок. Соблюдайте выбранную последовательность и не меняйте цвета без необходимости. Самостоятельно выбрать цвета достаточно сложно, особенно, если вы не дизайнер. Если вы делаете корпоративную презентацию, используйте фирменные цвета.&lt;/p&gt;
&lt;p&gt;Если фирменных цветов нет, воспользуйтесь сайтами по подбору цветов. Там представлены готовые сочетания, на которые приятно смотреть.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки научного программирования.</title>
      <link>https://example.com/post/post8/</link>
      <pubDate>Thu, 19 May 2022 17:50:46 +0300</pubDate>
      <guid>https://example.com/post/post8/</guid>
      <description>&lt;p&gt;Сегодня в мире существуют сотни языков программирования — как среди них выбрать наиболее подходящий для изучения? Публикуем список из 20 наиболее популярных вариантов. Перечень составлен на основе индексов TIOBE, Google Trends и StackOverflow Trends, языки расположены в алфавитном порядке.&lt;/p&gt;
&lt;p&gt;Bash
Сценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится.&lt;/p&gt;
&lt;p&gt;Также стоит обратить внимание на zsh, который в настоящее время является оболочкой по умолчанию в macOS.&lt;/p&gt;
&lt;p&gt;Области применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.&lt;/p&gt;
&lt;p&gt;COBOL
Один из старейших языков, используемых до сих пор, был создан Грейс Хоппер в конце 1950-х годов и предназначался для стандартизации разработки крупномасштабных бизнес-приложений на компьютерах. Блестящая концепция, которая до сих пор применяется в кроссплатформенных SDK. Через системы COBOL проходят невероятные 95% транзакций ATM, причем многие из этих устройств работают круглосуточно 365 дней в году. Такие поставщики устройств, как IBM, разрабатывают более мощные машины, предназначенные для COBOL, но продолжают обслуживать и обновлять существующие системы из-за затрат и рисков, связанных с их заменой. В ближайшее время COBOL никуда не уйдет. Это хороший выбор для тех, кто хочет работать с клиентами из финансовой сферы.&lt;/p&gt;
&lt;p&gt;Области применения: банковское дело / финансы, международные корпорации, правительства.&lt;/p&gt;
&lt;p&gt;C/C++
Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.&lt;/p&gt;
&lt;p&gt;Область применения: разработка ОС / SDK, встроенные устройства, игровые движки, наука.&lt;/p&gt;
&lt;p&gt;C#, выпущенный Microsoft в 2000 году, был разработан Андерсом Хейлсбергом как кроссплатформенный язык объектно-ориентированного программирования. Сейчас он часто используется для разработки бизнес-приложений, API, игр и многого другого. Благодаря широкому набору функций этот язык подходит для работы с графикой и других задач асинхронного программирования.&lt;/p&gt;
&lt;p&gt;Области применения: корпоративные приложения, разработка программного и пользовательского интерфейса, игры, графика.&lt;/p&gt;
&lt;p&gt;Dart
Современный язык, разработанный в Google для создания мобильных, десктопных, веб-и серверных приложений. Его создатель Ларс Бак также придумал JavaSript Engine V8. Dart напоминает другие современные языки объектно-ориентированного программирования — C #, TypeScript и Java — и предоставляет обширный набор функций, подходящих для определения сложных взаимодействий, асинхронных операций, анимации и других задач.&lt;/p&gt;
&lt;p&gt;Области применения: кроссплатформенные приложения, облачные сервисы / корпоративные системы, игры, графика.&lt;/p&gt;
&lt;p&gt;Fortran
Fortran, разработанный в IBM в 1950-х годах Джоном Бакусом, — это язык общего назначения, который был создан для проведения научных и инженерных работ. Он до сих пор широко используется в этих целях, в том числе для контрольного тестирования самых быстрых суперкомпьютеров в мире. Он также применялся в космических и физических исследованиях и моделировании погоды.&lt;/p&gt;
&lt;p&gt;Области применения: аэрокосмическая/оборонная промышленность, научные вычисления, численный анализ.&lt;/p&gt;
&lt;p&gt;Java
Java — это ООП-язык общего назначения, разработанный в 1990-х годах Джеймсом Гослингом в Sun (сейчас принадлежит Oracle) и предназначенный для компиляции в байт-код для запуска на виртуальной машине Java. К 2020 году к ним относятся практически все виды устройств — от телевизоров и игровых приставок до серверов, телефонов и даже кухонных приборов. Язык широко распространен в корпорациях и университетах, что сделало его популярным как среди начинающих программистов, так и среди опытных разработчиков.&lt;/p&gt;
&lt;p&gt;Области применения: корпоративные приложения, встроенные системы, веб-сервисы, игры.&lt;/p&gt;
&lt;p&gt;JavaScript
JavaScript разработал Брэндон Айх в 1990-х годах, чтобы добавлять выполнение скриптов на сайты. Сегодня это универсальный язык веб-интерфейса с мощными стандартизированными функциями, которые поддерживаются всеми основными браузерами. JavaScript соответствует стандарту EcmaScript, который обновляется каждые несколько лет с добавлением новых спецификаций языка. Кроме того, JavaScript часто используется для разработки серверных служб и API, мобильных приложений, игр и другого программного обеспечения. Это отличный выбор для изучения и дальнейшего совершенствования.&lt;/p&gt;
&lt;p&gt;Области применения: фулстэк-разработка, облачные сервисы / контейнерное хранение, игры, утилиты.&lt;/p&gt;
&lt;p&gt;Julia
Современный язык высокого уровня, предназначенный для высокопроизводительной числовой обработки и статистического анализа. Julia разработали в 2009 году Джефф Безансон, Стефан Карпински, Вирал Б. Шах и Алан Эдельман. Это один из четырех языков, позволяющих достигать производительности суперкомпьютеров на уровне петафлопсов (наряду с C, C ++ и Fortran). Пользуется популярностью в университетах, правительствах и финансовых учреждениях.&lt;/p&gt;
&lt;p&gt;Области применения: финансовый анализ, математические исследования, научные вычисления.&lt;/p&gt;
&lt;p&gt;Kotlin
Kotlin, разработанный для взаимодействия с Java, оснащен возможностями функционального программирования и функциями ООП, включая работу с ламбда-выражениями, перегрузку операторов и так далее. В 2019 году Google назвал Kotlin предпочтительным языком для разработки под Android, поэтому его точно стоит изучить тем, кто планирует создавать приложения для Android и плагины для популярных SDK.&lt;/p&gt;
&lt;p&gt;Области применения: приложения для Android, разработка на стороне сервера, а также все сферы, где используется Java.&lt;/p&gt;
&lt;p&gt;Lisp
Lisp — это группа языков, связанных с исторической реализацией LISP, которая была разработана в MIT в 1950-х годах для описания программ математическим способом. Синтаксис в Lisp основан на s-выражениях — это отличает его от большинства других языков, многие из которых связаны с С или находятся под его влиянием. Lisp был популярен в ранних исследованиях ИИ и широко применялся как язык скриптов для САПР и других инженерных приложений, так как он воспринимает код в виде данных и позволяет настраивать язык с помощью макросов , что отличает его от более статичных языков. Среди известных приложений на его основе —AutoLisp (скрипт для AutoCad) и Roomba. Один из языков семейства, Clojure, особенно удобен для создания масштабных приложений для бизнеса и интернета.&lt;/p&gt;
&lt;p&gt;Области применения: искусственный интеллект, робототехника, написание скриптов, расширения языков, исследования, разработка.
Lua
Lua был разработан в 1993 году Роберто Иерузалимски для встраивания в другие приложения. Сейчас он широко используется в качестве языка скриптов для добавления новых функций в программы. Например, с его помощью можно дополнять описание игровой логики при разработке видеоигр или расширить набор пользовательских функций в графических приложениях.&lt;/p&gt;
&lt;p&gt;Области применения: расширения программного обеспечения, игровая логика, автоматизация, электроника / интернет вещей.&lt;/p&gt;
&lt;p&gt;PowerShell
PowerShell был разработан Microsoft в 2006 году для предоставления Unix-подобных функций интерфейса командной строки в Windows. Позже он был выпущен с открытым исходным кодом и портирован на macOS, CentOS и Ubuntu. PowerShell широко применяется в системах, использующих Windows Server и другие технологии Microsoft: он делает администрирование удобнее и снижает затраты на обслуживание.&lt;/p&gt;
&lt;p&gt;Области применения: системное администрирование Windows, интерфейс командной строки, скрипты, обслуживание.&lt;/p&gt;
&lt;p&gt;Python
Python, представленные в 1991 году Гвидо ван Россумом, был задуман как хорошо читаемый язык с функциями ООП, предполагающий использование функциональных парадигм для построения чистых и хорошо организованных программ. Python пользуется поддержкой крупных платформ и применяется в самых разных сферах, в том числе в науке, интеллектуальной обработке данных, разработке систем искусственного интеллекта, компьютерной графике для художественных фильмов, облачных вычислениях, разработке игр и многих других. Python хорошо зарекомендовал себя и останется одним из наиболее востребованных инструментов в течение долгого времени.&lt;/p&gt;
&lt;p&gt;Области применения: искусственный интеллект / машинное обучение, интеллектуальная обработка данных, облачные сервисы / веб, медиа, скрипты.&lt;/p&gt;
&lt;p&gt;R
R был выпущен в 1995 году для статистических вычислений и выполнения других сложных математических операций, связанных с анализом данных и графикой. Корпорация Fortune 500 часто использует R для проведения комплексного анализа рисков, тенденций поведения клиентов и других задач, требующих большого количества вычислений. R отличается от многих языков статистики, а его синтаксис на основе s-выражений напоминает Lisp. Несмотря на то, что для других целей R используется редко, он считается стандартом в сфере аналитики данных, особенно для прогнозирования рынков или анализа пользовательских тенденций.&lt;/p&gt;
&lt;p&gt;Области применения: интеллектуальная обработка данных, прогнозная аналитика, графика.&lt;/p&gt;
&lt;p&gt;Ruby
Ruby был разработан Юкихиро Мацумото в 1995 году в качестве объектно-ориентированного языка скриптов, чтобы компенсировать отсутствие функций ООП в других скриптовых языках программирования того времени. Наличие таких функций, как динамическая типизация, наследование, отражение и перегрузка операторов, делают его идеальным для созданий сложных скриптов и приложений для веб-серверов.&lt;/p&gt;
&lt;p&gt;Области применения: сложные скрипты, управление пакетами, утилиты, веб-сервера.&lt;/p&gt;
&lt;p&gt;Rust
Rust — это мультипарадигмальный язык, предназначенный для создания крупных параллельных систем, обладающих высокой производительностью и надежностью. С 2016 года Rust ежегодно признавался самым популярным языком программирования в опросе StackOverflow. Будучи языком системного уровня, похожим на C ++ и не требующим длительной обработки или наличия виртуальной машины, Rust обеспечивает низкоуровневый доступ к оборудованию. Благодаря этому он идеально подходит для разработки операционных систем, программ для микроконтроллеров и другого софта, в котором решающее значение имеет производительность железа.&lt;/p&gt;
&lt;p&gt;Области применения: разработка ОС, встроенные приложения, сервера, инструменты, игры.&lt;/p&gt;
&lt;p&gt;SQL
SQL относится к универсальным языкам программирования, но является мощным предметно-ориентированным языком для управления реляционными базами данных. Способы его применения — от хранилищ данных Fortune 500 до встроенного SQLite — широко используются в десктопных и мобильных приложениях. На многих позициях в ИТ и разработке необходимо хотя бы базовое знание SQL. Расширенные навыки позволяют разработчику создавать чрезвычайно безопасные и надежные правила предметной области, не зависящие от языка программирования или используемого SDK. Высокопрофильные реализации включают в себя Microsoft SQL Server, Oracle Database и PostgreSQL. Каждая из них обладает уникальным расширением языка SQL и предлагает новые функции, выходящие за рамки базовой спецификации SQL. Изучение SQL не займет много времени и пригодится во многих областях от аналитики и обработки данных до управления в сфере ИТ и разработки программного обеспечения.&lt;/p&gt;
&lt;p&gt;Области применения: работа с реляционными данными, встраивание данных в приложения.&lt;/p&gt;
&lt;p&gt;Swift
Swift был выпущен Apple в 2014 году в качестве замены Objective-C в их продуктах (аналогично тому, как Kotlin заменил Java для Android). Swift сохраняет некоторые функции Objective-C (такие как динамическая диспетчеризация), используемые в программном обеспечении продуктов Apple, но отличается повышенной безопасностью и измененным синтаксисом, более близким к C # или Java.&lt;/p&gt;
&lt;p&gt;Области применения: создание приложений для macOS, iOS, watchOS и так далее.&lt;/p&gt;
&lt;p&gt;TypeScript
TypeScript — это язык с открытым исходным кодом от Microsoft, разработанный для добавления функций ООП в JavaScript и повышения удобства работы со сложными приложениями. TypeScript, представленный в 2012 году, обычно используется для создания надежных масштабируемых веб-приложений, сред и других программ — например, популярного редактора VS Code.&lt;/p&gt;
&lt;p&gt;Области применения: веб-интерфейс, разработка программного интерфейса, игры, масштабирование любого программного обеспечения JavaScript.&lt;/p&gt;
&lt;p&gt;Вывод
Для успешной карьеры в ИТ нужно владеть хотя бы несколькими языками из данного списка. У каждого из них есть свои сильные и слабые стороны: эффективнее всего использовать преимущества конкретной среды и искать другие инструменты для тех областей, в которых система работает не так успешно. Если какой-то язык не подходит для решения определенной задачи, найдите тот, который пригодится больше. Существует множество стилей программирования и десятки шаблонов проектирования для каждого из перечисленных языков.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 19.05</title>
      <link>https://example.com/post/post5/</link>
      <pubDate>Thu, 19 May 2022 17:24:58 +0300</pubDate>
      <guid>https://example.com/post/post5/</guid>
      <description>&lt;p&gt;На прошлой неделе я съезила в Санкт-Петербург, побывала в Петергофе, Выборге и Кронштадте. Сделала 2 лабораторные по операционным системам. Увидела развод мостов с катера. Побывала в ресторанах грузинской и японской кухни. Сделала уборку и приготовила самые вкусные котлеты для Маши Зайцевой. Не забыла потренироваться! Кушала самые невкусные шпинатные венские вафли .&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 26.05</title>
      <link>https://example.com/post/post7/</link>
      <pubDate>Thu, 19 May 2022 17:24:58 +0300</pubDate>
      <guid>https://example.com/post/post7/</guid>
      <description>&lt;p&gt;На прошлой неделе я написала две контрольные работы. Сходила в театр, а также выступила на межвузовских соревнованиях. Приготовила курочку в соево-кунжутном соусе с картошкой по-деревенски. Лизка лучшая малышка!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Легковесные языки разметки</title>
      <link>https://example.com/post/post4/</link>
      <pubDate>Thu, 19 May 2022 15:52:36 +0300</pubDate>
      <guid>https://example.com/post/post4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Общая информация&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Предназначены для простого и быстрого добавления форматирования в текстовые данные.
Особенности:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Минимум функций.&lt;/li&gt;
&lt;li&gt;Небольшой набор поддерживаемых тегов.&lt;/li&gt;
&lt;li&gt;Легки в освоении.&lt;/li&gt;
&lt;li&gt;Исходный текст на таком языке читается с такой же лёгкостью, как и готовый документ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Представители&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;Org-mode&lt;/li&gt;
&lt;li&gt;BBCode&lt;/li&gt;
&lt;li&gt;reStructuredText&lt;/li&gt;
&lt;li&gt;Textile&lt;/li&gt;
&lt;li&gt;Вики-разметка&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Легкие языки разметки имеют простой синтаксис&lt;/strong&gt;
Одним из отличительных признаков этих языков является то, что их «теги» (такие как они) должны быть интуитивно понятными.
Намного более читабельно, нет? Начиная сверху, мы можем определить заголовок, так как он «подчеркнут» штрихами. Вы могли бы сделать это, если бы писали от руки, просто нарисуйте подчеркивание под заголовком страницы в блокноте. Также нет тегов абзаца — Asciidoc рассматривает что-либо между двумя пустыми строками, на которых нет какой-либо другой разметки, как «простой» текст абзаца. Наконец, звездочки вокруг слова «абзац» обозначают жирным шрифтом. Поднимите руку, если вы сделали это в текстовом сообщениии.
&lt;strong&gt;Каждый имеет один или несколько соответствующих процессоров&lt;/strong&gt;
У «тяжеловесных» языков разметки обычно есть специальное приложение для их интерпретации. В Интернете ваш браузер и, возможно, веб-сервер превратят код в яркие веб-страницы. Для документов в формате XML это может быть что-то вроде Microsoft Word, который читает и записывает в формате DOCX. (это еще один диалект XML). Таким образом, вам никогда не придется напрямую взаимодействовать с источником этих документов, только симпатичные фасады, которые показывают ваши приложения.&lt;/p&gt;
&lt;p&gt;Между тем, документы, написанные на легких языках, читаются человеком в исходной форме (другой арендатор), но только истинные ботаники могут считать их красивыми. Чтобы получить хороший результат, вам нужно использовать процессор . Это приложения, которые будут последовательно проходить через вашу разметку и преобразовывать ее во что-то другое, что выглядит хорошо. Те же самые проекты, которые разрабатывают сам язык, как правило, создают утилиту для его использования. Проект Markdown предлагает Perl-скрипт с тем же именем, а сопутствующая программа Asciidoc написана на Python. Кроме того, другие утилиты преобразования будут включать поддержку некоторых из этих языков. Одним из таких примеров является превосходный Pandoc , который будет использовать Markdown, а также облегченные пометки, реструктурированный текст, Mediawiki и Org-Mode и преобразовывать их в PDF, DOCX, ODT и другие.
&lt;strong&gt;Markdown достаточно для большинства пользователей&lt;/strong&gt;
Уценка охватывает все основы для большей части пользователей. Для тех, кто просто ищет блог или печатает некоторые заметки в текстовом формате, Markdown поддерживает все элементы, которые им понадобятся. Перекрестные ссылки мало что значат для пользователя, который просто хочет создать простую заметку или веб-страницу. Вы могли бы даже использовать Markdown для более длительных работ с простыми макетами, такими как роман « , и объедините их самостоятельно в конце.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Блог 12.05</title>
      <link>https://example.com/post/post3/</link>
      <pubDate>Thu, 19 May 2022 15:43:28 +0300</pubDate>
      <guid>https://example.com/post/post3/</guid>
      <description>&lt;p&gt;На прошлой неделе я выполнила две лабораторные работы по опреационным системам.И съездила домой.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git</title>
      <link>https://example.com/post/post1/post1/</link>
      <pubDate>Thu, 12 May 2022 13:47:04 +0300</pubDate>
      <guid>https://example.com/post/post1/post1/</guid>
      <description>&lt;p&gt;Контроль версий, также известный как управление исходным кодом, — это практика отслеживания изменений программного кода и управления ими. Системы контроля версий — это программные инструменты, помогающие командам разработчиков управлять изменениями в исходном коде с течением времени. В свете усложнения сред разработки они помогают командам разработчиков работать быстрее и эффективнее. Системы контроля версий наиболее полезны командам DevOps, поскольку помогают сократить время разработки и увеличить количество успешных развертываний.&lt;/p&gt;
&lt;p&gt;Программное обеспечение контроля версий отслеживает все вносимые в код изменения в специальной базе данных. При обнаружении ошибки разработчики могут вернуться назад и выполнить сравнение с более ранними версиями кода для исправления ошибок, сводя к минимуму проблемы для всех участников команды.
video thumbnail&lt;/p&gt;
&lt;p&gt;Практически во всех программных проектах исходный код является сокровищем: это ценный ресурс, который необходимо беречь. Для большинства команд разработчиков программного обеспечения исходный код — это репозиторий бесценных знаний и понимания проблемной области, которые они скрупулезно собирали и совершенствовали. Контроль версий защищает исходный код от катастрофических сбоев, от случайных ухудшений, вызванных человеческим фактором, а также от непредвиденных последствий.&lt;/p&gt;
&lt;p&gt;Разработчики программного обеспечения, работающие в командах, постоянно пишут новый исходный код и изменяют существующий. Код проекта, приложения или программного компонента обычно организован в виде структуры папок или «дерева файлов». Один разработчик в команде может работать над новой возможностью, а другой в это же время изменять код для исправления несвязанной ошибки, т. е. каждый разработчик может вносить свои изменения в несколько частей дерева файлов.&lt;/p&gt;
&lt;p&gt;Контроль версий помогает командам решать подобные проблемы путем отслеживания каждого изменения, внесенного каждым участником, и предотвращать возникновение конфликтов при параллельной работе. Изменения, внесенные в одну часть программного обеспечения, могут быть не совместимы с изменениями, внесенными другим разработчиком, работавшим параллельно. Такая проблема должна быть обнаружена и решена согласно регламенту, не создавая препятствий для работы остальной части команды. Кроме того, во время разработки программного обеспечения любое изменение может само по себе привести к появлению новых ошибок, и новому ПО нельзя доверять до тех пор, пока оно не пройдет тестирование. Вот почему процессы тестирования и разработки идут рука об руку, пока новая версия не будет готова.&lt;/p&gt;
&lt;p&gt;Хорошее программное обеспечение для управления версиями поддерживает предпочтительный рабочий процесс разработчика, не навязывая определенный способ работы. В идеале оно также работает на любой платформе и не принуждает разработчика использовать определенную операционную систему или цепочку инструментов. Хорошие системы управления версиями обеспечивают плавный и непрерывный процесс внесения изменений в код и не прибегают к громоздкому и неудобному механизму блокировки файлов, который дает зеленый свет одному разработчику, но при этом блокирует работу других.&lt;/p&gt;
&lt;p&gt;Группы разработчиков программного обеспечения, не использующие какую-либо форму управления версиями, часто сталкиваются с такими проблемами, как незнание об изменениях, выполненных для пользователей, или создание в двух несвязанных частях работы изменений, которые оказываются несовместимыми и которые затем приходится скрупулезно распутывать и перерабатывать. Если вы как разработчик ранее никогда не применяли управление версиями, возможно, вы указывали версии своих файлов, добавляя суффиксы типа «финальный» или «последний», а позже появлялась новая финальная версия. Возможно, вы использовали комментирование блоков кода, когда хотели отключить определенные возможности, не удаляя их, так как опасались, что этот код может понадобиться позже. Решением всех подобных проблем является управление версиями.&lt;/p&gt;
&lt;p&gt;Программное обеспечение для управления версиями является неотъемлемой частью повседневной профессиональной практики современной команды разработчиков программного обеспечения. Отдельные разработчики ПО, привыкшие работать в команде с эффективной системой управления версиями, обычно признают невероятную пользу управления версиями даже при работе над небольшими сольными проектами. Привыкнув к мощным преимуществам систем контроля версий, многие разработчики не представляют как работать без них даже в проектах, не связанных с разработкой ПО.
Преимущества систем контроля версий&lt;/p&gt;
&lt;p&gt;Программное обеспечение контроля версий рекомендуется для продуктивных команд разработчиков и команд DevOps. Управление версиями помогает отдельным разработчикам работать быстрее, а командам по разработке ПО — сохранять эффективность и гибкость по мере увеличения числа разработчиков.&lt;/p&gt;
&lt;p&gt;За последние несколько десятилетий системы контроля версий (Version Control Systems, VCS) стали гораздо более совершенными, причем некоторым это удалось лучше других. Системы VCS иногда называют инструментами SCM (управления исходным кодом) или RCS (системой управления редакциями). Один из наиболее популярных на сегодняшний день инструментов VCS называется Git. Git относится к категории распределенных систем контроля версий, известных как DVCS (эта тема будет рассмотрена подробнее чуть позже). Git, как и многие другие популярные и доступные на сегодняшний день системы VCS, распространяется бесплатно и имеет открытый исходный код. Независимо от того, какую систему контроля версий вы используете и как она называется, основные ее преимущества заключаются в следующем.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Полная история изменений каждого файла за длительный период. Это касается всех изменений, внесенных огромным количеством людей за долгие годы. Изменением считается создание и удаление файлов, а также редактирование их содержимого. Различные инструменты VCS отличаются тем, насколько хорошо они обрабатывают операции переименования и перемещения файлов. В историю также должны входить сведения об авторе, дата и комментарий с описанием цели каждого изменения. Наличие полной истории позволяет возвращаться к предыдущим версиям, чтобы проводить анализ основных причин возникновения ошибок и устранять проблемы в старых версиях программного обеспечения. Если над программным обеспечением ведется активная работа, то «старой версией» можно считать почти весь код этого ПО.

Ветвление и слияние. Эта возможность полезна не только при одновременной работе участников команды: отдельные люди также могут извлечь из нее пользу и работать над несколькими независимыми направлениями. Создание «веток» в инструментах VCS позволяет иметь несколько независимых друг от друга направлений разработки, а также выполнять их слияние, чтобы разработчики могли проверить, что изменения, внесенные в каждую из веток, не конфликтуют друг с другом. Многие команды разработчиков программного обеспечения создают отдельные ветки для каждой функциональной возможности, для каждого релиза либо и для того, и для другого. Наличие множества различных рабочих процессов позволяет командам выбирать подходящий для них способ использования ветвления и слияния в VCS.

Отслеживаемость. Возможность отслеживать каждое изменение, внесенное в программное обеспечение, и связывать его с ПО для управления проектами и отслеживания ошибок, например Jira, а также оставлять к каждому изменению комментарий с описанием цели и назначения изменения может помочь не только при анализе основных причин возникновения ошибок, но и при проведении другого анализа. История с комментариями во время чтения кода помогает понять, что этот код делает и почему действие реализовано именно таким образом. Благодаря этому разработчики могут вносить корректные и совместимые изменения в соответствии с долгосрочным планом разработки системы. Это особенно важно для эффективной работы с унаследованным кодом, поскольку дает разработчикам возможность точнее оценить объем дальнейшей работы.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Разрабатывать программное обеспечение можно и без управления версиями, но такой подход подвергает проект огромному риску, и ни одна профессиональная команда не порекомендует применять его. Таким образом, вопрос заключается не в том, использовать ли управление версиями, а в том, какую систему управления версиями выбрать.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://example.com/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%23MadeWithWowchemy&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/hugo-tutorials/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Tutorial&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features 🦄✨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
